{"meta":{"protocolVersion":"15.0.0","implementation":{"name":"fake-cucumber","version":"11.0.0"},"cpu":{"name":"x64"},"os":{"name":"darwin","version":"19.6.0"},"runtime":{"name":"node.js","version":"15.12.0"}}}
{"source":{"data":"# Feature: Step Definitions\n\nYour Gherkin steps are connected to the system through *Step Definitions*.\n\n## Rule: A step definition can be invoked with parameter values\n\nA Step Definition is made up by an expression and a body.\nThe expression is either a Regular Expression or a Cucumber Expression.\nThe body is a function, method, lambda, block or closure, depending on\nyour programming language.\n\n### Example: string and int\n\n* Given the following step definition:\n  ```typescript\n  Given(\"there are {int} apples in {string}'s basket\", function(apples: number, name: string) {\n    console.log(JSON.stringify([number, name]))\n  })\n  ```\n* And the following Gherkin step:\n  ```gherkin\n  Given there are 4 apples in Mary's basket\n  ```\n* When the step runs\n* Then the following should be printed:\n  ```\n  [24, \"Mary\"]\n  ```\n\n## Rule: A step definition can be passes multiline arguments\n\n### Example: DataTable\n\nHere is an example of what it looks like:\n\n* Given this is a typical table:\n\n| name | age |\n| ---- | --: |\n| Bill |   3 |\n| Jane |   6 |\n","uri":"features/markdown/markdown.md","mediaType":"text/x.cucumber.gherkin+plain"}}
{"parseError":{"source":{"uri":"features/markdown/markdown.md","location":{"line":3,"column":1}},"message":"(3:1): expected: #EOF, #Language, #TagLine, #FeatureLine, #Comment, #Empty, got 'Your Gherkin steps are connected to the system through *Step Definitions*.'"}}
{"parseError":{"source":{"uri":"features/markdown/markdown.md","location":{"line":7,"column":1}},"message":"(7:1): expected: #EOF, #Language, #TagLine, #FeatureLine, #Comment, #Empty, got 'A Step Definition is made up by an expression and a body.'"}}
{"parseError":{"source":{"uri":"features/markdown/markdown.md","location":{"line":8,"column":1}},"message":"(8:1): expected: #EOF, #Language, #TagLine, #FeatureLine, #Comment, #Empty, got 'The expression is either a Regular Expression or a Cucumber Expression.'"}}
{"parseError":{"source":{"uri":"features/markdown/markdown.md","location":{"line":9,"column":1}},"message":"(9:1): expected: #EOF, #Language, #TagLine, #FeatureLine, #Comment, #Empty, got 'The body is a function, method, lambda, block or closure, depending on'"}}
{"parseError":{"source":{"uri":"features/markdown/markdown.md","location":{"line":10,"column":1}},"message":"(10:1): expected: #EOF, #Language, #TagLine, #FeatureLine, #Comment, #Empty, got 'your programming language.'"}}
{"parseError":{"source":{"uri":"features/markdown/markdown.md","location":{"line":14,"column":1}},"message":"(14:1): expected: #EOF, #Language, #TagLine, #FeatureLine, #Comment, #Empty, got '* Given the following step definition:'"}}
{"parseError":{"source":{"uri":"features/markdown/markdown.md","location":{"line":15,"column":3}},"message":"(15:3): expected: #EOF, #Language, #TagLine, #FeatureLine, #Comment, #Empty, got '```typescript'"}}
{"parseError":{"source":{"uri":"features/markdown/markdown.md","location":{"line":16,"column":3}},"message":"(16:3): expected: #EOF, #Language, #TagLine, #FeatureLine, #Comment, #Empty, got 'Given(\"there are {int} apples in {string}'s basket\", function(apples: number, name: string) {'"}}
{"parseError":{"source":{"uri":"features/markdown/markdown.md","location":{"line":17,"column":5}},"message":"(17:5): expected: #EOF, #Language, #TagLine, #FeatureLine, #Comment, #Empty, got 'console.log(JSON.stringify([number, name]))'"}}
{"parseError":{"source":{"uri":"features/markdown/markdown.md","location":{"line":18,"column":3}},"message":"(18:3): expected: #EOF, #Language, #TagLine, #FeatureLine, #Comment, #Empty, got '})'"}}
{"parseError":{"source":{"uri":"features/markdown/markdown.md","location":{"line":19,"column":3}},"message":"(19:3): expected: #EOF, #Language, #TagLine, #FeatureLine, #Comment, #Empty, got '```'"}}
{"stepDefinition":{"id":"9fb9f761-566a-4ce4-9252-cc15ed587d1f","pattern":{"type":"CUCUMBER_EXPRESSION","source":"I have {int} cukes in my belly"},"sourceReference":{"uri":"features/markdown/markdown.md.ts","location":{"line":4}}}}
{"testRunStarted":{"timestamp":{"seconds":1619874029,"nanos":388000000}}}
{"testRunFinished":{"timestamp":{"seconds":1619874029,"nanos":389000000},"success":true}}
